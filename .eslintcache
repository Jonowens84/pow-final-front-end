[{"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/index.js":"1","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/reportWebVitals.js":"2","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/App.js":"3","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/RetroPage/RetroPage.js":"4","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/HomePage/HomePage.js":"5","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/StandUpPage/StandUpPage.js":"6","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/UserPage/UserPage.js":"7","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/horizontal-navs/HorizontalNav4.js":"8","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/RetroPage/01_Instructions/01_InstructionsRetro.js":"9","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/RetroPage/02_PickRole/02_PickRole.js":"10","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/RetroPage/05_FinishedMeeting/05_FinishedMeeting.js":"11","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/RetroPage/03_Setup/03_SetupFacilitator.js":"12","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/RetroPage/04_MeetingInProgress/04_MeetingInProgress.js":"13","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/RetroPage/03_Setup/03_SetupParticipant.js":"14","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/ProductTitle/ProductTitle.js":"15","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/team/Team2.js":"16","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/UserDashboard/UserDashboard.js":"17","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/gallery/Gallery2.js":"18","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/features/Features4.js":"19","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/MeetingStats/MeetingStats.js":"20","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/StatsGraph/StatsGraph.js":"21","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/StandUpPage/04_MeetingFinished/04_MeetingFinished.js":"22","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/StandUpPage/01_Instructions/01_Instructions.js":"23","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/footers/Footer3.js":"24","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/StandUpPage/02_Setup/02_Setup.js":"25","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/StandUpPage/03_RandomizerAndTimer/03_RandomizerAndTimer.js":"26","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/Login/LogInButton/LogInButton.js":"27","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/Login/LogOutButton/LogOutButton.js":"28","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/RandomizerCard/RandomizerCard.js":"29","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/TimerPartyParrot/TimerPartyParrot.js":"30","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/MeetingParticipants/ParticipantCard/ParticipantCard.js":"31","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/MeetingStats/Acordion.js":"32","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/TextField/Text.js":"33","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/TotalStandups/TotalStandups.js":"34","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/TotalRetros/TotalRetros.js":"35","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/FastestMeeting/FastestMeeting.js":"36","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/RetroPage/04_MeetingInProgress/RetroColumn/RetroColumn.js":"37","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/RetroPage/04_MeetingInProgress/RetroCard/RetroCard.js":"38"},{"size":983,"mtime":1610102524282,"results":"39","hashOfConfig":"40"},{"size":362,"mtime":1608644733676,"results":"41","hashOfConfig":"40"},{"size":1145,"mtime":1610357570391,"results":"42","hashOfConfig":"40"},{"size":5942,"mtime":1610537986873,"results":"43","hashOfConfig":"40"},{"size":4282,"mtime":1610537986869,"results":"44","hashOfConfig":"40"},{"size":6633,"mtime":1610366728849,"results":"45","hashOfConfig":"40"},{"size":2032,"mtime":1610449961074,"results":"46","hashOfConfig":"40"},{"size":4981,"mtime":1610449961071,"results":"47","hashOfConfig":"40"},{"size":3222,"mtime":1610624559097,"results":"48","hashOfConfig":"40"},{"size":486,"mtime":1610449961072,"results":"49","hashOfConfig":"40"},{"size":116,"mtime":1610449961073,"results":"50","hashOfConfig":"40"},{"size":5721,"mtime":1610449961072,"results":"51","hashOfConfig":"40"},{"size":4138,"mtime":1610537986872,"results":"52","hashOfConfig":"40"},{"size":683,"mtime":1610449961072,"results":"53","hashOfConfig":"40"},{"size":407,"mtime":1610357570392,"results":"54","hashOfConfig":"40"},{"size":5015,"mtime":1610102524281,"results":"55","hashOfConfig":"40"},{"size":1097,"mtime":1610449961071,"results":"56","hashOfConfig":"40"},{"size":1936,"mtime":1608646142335,"results":"57","hashOfConfig":"40"},{"size":3965,"mtime":1608646142334,"results":"58","hashOfConfig":"40"},{"size":3339,"mtime":1610449961069,"results":"59","hashOfConfig":"40"},{"size":4162,"mtime":1610449961069,"results":"60","hashOfConfig":"40"},{"size":8244,"mtime":1610449961074,"results":"61","hashOfConfig":"40"},{"size":2459,"mtime":1610449961074,"results":"62","hashOfConfig":"40"},{"size":2963,"mtime":1610102524280,"results":"63","hashOfConfig":"40"},{"size":7028,"mtime":1610357570398,"results":"64","hashOfConfig":"40"},{"size":3681,"mtime":1609936182605,"results":"65","hashOfConfig":"40"},{"size":323,"mtime":1608644733673,"results":"66","hashOfConfig":"40"},{"size":357,"mtime":1609751452586,"results":"67","hashOfConfig":"40"},{"size":1685,"mtime":1609936182604,"results":"68","hashOfConfig":"40"},{"size":6196,"mtime":1610449961069,"results":"69","hashOfConfig":"40"},{"size":1654,"mtime":1609751452587,"results":"70","hashOfConfig":"40"},{"size":1341,"mtime":1610449961068,"results":"71","hashOfConfig":"40"},{"size":740,"mtime":1610357570393,"results":"72","hashOfConfig":"40"},{"size":784,"mtime":1610449961070,"results":"73","hashOfConfig":"40"},{"size":788,"mtime":1610449961070,"results":"74","hashOfConfig":"40"},{"size":2851,"mtime":1610449961068,"results":"75","hashOfConfig":"40"},{"size":1771,"mtime":1610449961073,"results":"76","hashOfConfig":"40"},{"size":2432,"mtime":1610449961073,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"vdydl7",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"80"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/index.js",[],["164","165"],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/reportWebVitals.js",[],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/App.js",[],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/RetroPage/RetroPage.js",["166"],"// React\nimport React, { useState, useEffect } from \"react\";\n\n// Material UI\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Collapse from \"@material-ui/core/Collapse\";\n\n// Customer Components\nimport ProductTitle from \"../../components/ProductTitle/ProductTitle\";\nimport InstructionsRetro from \"./01_Instructions/01_InstructionsRetro\";\nimport PickRole from \"./02_PickRole/02_PickRole\";\nimport SetupFacilitator from \"./03_Setup/03_SetupFacilitator\";\nimport SetupParticipant from \"./03_Setup/03_SetupParticipant\";\nimport MeetingInProgress from \"./04_MeetingInProgress/04_MeetingInProgress\";\nimport FinishedMeeting from \"./05_FinishedMeeting/05_FinishedMeeting\";\n\n// nanoid\nimport { nanoid } from \"nanoid\";\n\n// CSS\nimport \"./RetroPage.css\";\n\nfunction Retro() {\n  // Steps\n  const [retroStep, setRetroStep] = useState(1);\n  const steps = [\n    \"Review instructions\",\n    \"Select your role\",\n    \"Create / Join a Retrospective\",\n    \"Run your Retrospective\",\n    \"Finish!\",\n  ];\n  // Navigate through steps\n  function previousStep() {\n    setRetroStep(retroStep - 1);\n  }\n  function nextStep(role) {\n    setRetroStep(retroStep + 1);\n    if (!role) {\n      return;\n    } else if (role === \"facilitator\") {\n      setParticipant({ ...participant, isFacilitator: true });\n    } else if (role === \"participant\") {\n      setParticipant({ ...participant, isFacilitator: false });\n    }\n  }\n\n  // Blank Participant State\n  const blankParticipant = {\n    name: \"\",\n    isFacilitator: false,\n    meetingEmitted: false,\n    avatar: \"\",\n    votedOn: [],\n  };\n  const [participant, setParticipant] = useState({\n    ...blankParticipant,\n  });\n\n  // Blank Meeting State\n  const blankRetro = {\n    roomId: null,\n    title: `Retro meeting on ${new Date().toUTCString()}`,\n    type: \"retro\",\n    subtype: \"Four Ls (4Ls)\",\n    columns: [\"Liked\", \"Learned\", \"Lacked\", \"Longed For\"],\n    cards: [],\n    meetingStarted: false,\n    meetingFinished: false,\n    meetingStartTime: null,\n    meetingEndTime: null,\n  };\n  const [meeting, setMeeting] = useState({ ...blankRetro });\n\n  // Socket.io\n  const [socket, setSocket] = useState(null);\n\n  // Check if this is an attempt to join\n  useEffect(() => {\n    function checkForJoin() {\n      if (meeting.meetingStarted === true || retroStep !== 1) {\n        return;\n      }\n      // Get URL params\n      const urlParams = new URLSearchParams(window.location.search);\n\n      if (urlParams.get(\"roomId\") === null) {\n        console.log(\"No attempt to join detected...\");\n        return;\n      } else if (meeting.roomId === null) {\n        console.log(`Joining roomId ${urlParams.get(\"roomId\")}...`);\n        // Not a facilitator\n        setParticipant({ ...participant, isFacilitator: false });\n        // Set Meeting Room ID\n        setMeeting({ ...meeting, roomId: urlParams.get(\"roomId\") });\n        // Fast forward to Step 3\n        setRetroStep(3);\n      }\n    }\n\n    checkForJoin();\n  });\n\n  //// 👉 2 types of sources - local, and socket\n  ////// 👉  With local, we want to socket.emit the card\n  ////// 👉  With socket, we want to avoid that to prevent an infinite loop\n  function addCard({ card }) {\n    // Create card\n    const newCard = {\n      id: nanoid(),\n      addedBy: participant.name,\n      columnIndex: card.i,\n      content: \"\",\n      thumbsUp: 0,\n      thumbsDown: 0,\n      isDeleted: false,\n    };\n    // Emit from socket\n    if (socket) {\n      socket.emit(\"addCard\", newCard);\n    }\n  }\n\n  function deleteCard({ id }) {\n    // Emit from socket\n    if (socket) {\n      socket.emit(\"deleteCard\", id);\n    }\n  }\n\n  function updateCardText({ id, content }) {\n    // Emit from socket\n    if (socket) {\n      socket.emit(\"updateCardText\", { id, content });\n    }\n  }\n\n  function updateCardVotes({ id, thumb }) {\n    setParticipant({ ...participant, votedOn: [...participant.votedOn, id] });\n    if (socket) {\n      socket.emit(\"updateCardVotes\", { id, thumb });\n    }\n  }\n\n  function moveCard({ id, direction }) {\n    // Emit\n    if (socket) {\n      socket.emit(\"moveCard\", { id, direction });\n    }\n  }\n\n  return (\n    <div>\n      <Collapse in={retroStep === 1} timeout={800}>\n        <ProductTitle title=\"Retrospective\">\n          <p className=\"stepsTitleText\">\n            Real time, collaborative, and engaging retros that make a positive\n            impact on your team.\n          </p>\n        </ProductTitle>\n      </Collapse>\n\n      <Stepper activeStep={retroStep - 1} style={{ background: \"none\" }}>\n        {steps.map((label, index) => {\n          return (\n            <Step key={`RetroStep_${index}`}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n\n      {retroStep === 1 ? (\n        <InstructionsRetro props={{ nextButton: nextStep }} />\n      ) : null}\n\n      {retroStep === 2 ? <PickRole props={{ previousStep, nextStep }} /> : null}\n\n      {retroStep === 3 && participant.isFacilitator ? (\n        <SetupFacilitator\n          props={{\n            previousStep,\n            nextStep,\n            participant,\n            setParticipant,\n            meeting,\n            setMeeting,\n          }}\n        />\n      ) : retroStep === 3 && participant.isFacilitator === false ? (\n        <SetupParticipant\n          props={{\n            previousStep,\n            nextStep,\n            participant,\n            setParticipant,\n            meeting,\n            setMeeting,\n          }}\n        />\n      ) : null}\n\n      {retroStep === 4 ? (\n        <MeetingInProgress\n          props={{\n            meeting,\n            setMeeting,\n            addCard,\n            deleteCard,\n            updateCardText,\n            updateCardVotes,\n            moveCard,\n            participant,\n            setParticipant,\n            socket,\n            setSocket,\n          }}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default Retro;\n","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/HomePage/HomePage.js",["167","168","169","170","171","172","173","174"],"// React\nimport React from \"react\";\n\n// Material UI\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\n// Custom Components\nimport ProductTitle from \"../../components/ProductTitle/ProductTitle\";\nimport PlatformLogo from \"./images/logo512.png\";\n\n// React Router\nimport { Link } from \"react-router-dom\";\n\n// CSS\nimport \"./HomePage.css\";\n\n// Unused\nimport Features4 from \"../../components/features/Features4\";\nimport Team2 from \"../../components/team/Team2\";\nimport Gallery2 from \"../../components/gallery/Gallery2\";\nimport Footer3 from \"../../components/footers/Footer3\";\nimport UserDashboard from \"../../components/UserDashboard/UserDashboard\";\n\nexport default function Index(props) {\n  return (\n    <div>\n      <section className=\"titleSection\">\n        <Grid container spacing={3}>\n          <Grid item xs>\n            <img src={PlatformLogo} alt=\"Pow!Agile Logo\"></img>\n          </Grid>\n          <Grid item xs>\n            <h1 className=\"homePageTitle\">Pow!Agile</h1>\n            <h2 className=\"homePageSubTitle\">\n              We help you run <em>smashing</em> remote agile ceremonies\n            </h2>\n            <p className=\"homePageSalesyText\">\n              We get it - facilitating remote agile ceremonies is hard! So our\n              team built two amazing tools to help you be more productive, and\n              gain useful insights on how to run your ceremonies better.\n              <br />\n              <br />\n              And the best part? You don't even need an account to get started.\n            </p>\n          </Grid>\n        </Grid>\n      </section>\n\n      <Typography\n        className=\"getStartedText\"\n        variant=\"h5\"\n        element=\"p\"\n        display=\"block\"\n        gutterBottom\n      >\n        Get started using our free tools 👇\n      </Typography>\n\n      <section className=\"productButtonsSection\">\n        <Grid container spacing={3}>\n          <Grid item xs>\n            <Link className=\"linkWrapper\" to=\"/rituals/standup\">\n              <Card elevation={3}>\n                <CardActionArea>\n                  <CardContent className=\"homeStandUpCard\">\n                    <Typography\n                      gutterBottom\n                      variant=\"h5\"\n                      component=\"h2\"\n                      style={{ fontSize: \"1.2em\" }}\n                    >\n                      <ProductTitle title=\"StandUp\" />\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"p\">\n                      Our formula for fast and engaging remote standups.\n                    </Typography>\n                  </CardContent>\n                </CardActionArea>\n              </Card>\n            </Link>\n          </Grid>\n          <Grid item xs>\n            <Link className=\"linkWrapper\" to=\"/rituals/retro\">\n              <Card elevation={3}>\n                <CardActionArea>\n                  <CardContent className=\"homeRetroCard\">\n                    <Typography\n                      gutterBottom\n                      variant=\"h5\"\n                      component=\"h2\"\n                      style={{ fontSize: \"1.2em\" }}\n                    >\n                      <ProductTitle title=\"Retrospective\" />\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"p\">\n                      Real time, collaborative, and engaging retros that make a\n                      positive impact on your team.\n                    </Typography>\n                  </CardContent>\n                </CardActionArea>\n              </Card>\n            </Link>\n          </Grid>\n        </Grid>\n      </section>\n\n      {/* <section className=\"ourTeam\">\n        <div className=\"teamMate\">\n          <img src=\"\" alt=\"Daniela Leva - a developer on this project\"></img>\n          <h3>Daniela Leva</h3>\n          <h4>Back End, MongoDB, Mongoose</h4>\n          <a href=\"/\">LinkedIn</a>\n        </div>\n      </section> */}\n    </div>\n  );\n}\n","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/StandUpPage/StandUpPage.js",["175"],"// React\nimport { useState, useEffect } from \"react\";\n\n// CSS\nimport \"./StandUpPage.css\";\n\n// Material UI\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Collapse from \"@material-ui/core/Collapse\";\n\n// Custom Componenets\nimport InstructionsPage from \"./01_Instructions/01_Instructions\";\nimport SetupPage from \"./02_Setup/02_Setup\";\nimport RandomizerAndTimer from \"./03_RandomizerAndTimer/03_RandomizerAndTimer\";\nimport MeetingFinished from \"./04_MeetingFinished/04_MeetingFinished\";\nimport ProductTitle from \"../../components/ProductTitle/ProductTitle\";\n\n// Auth0\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nexport default function StandUpPage() {\n  /*Steps*/\n  const [standUpStep, setStandUpStep] = useState(1);\n\n  /*Meeting Setup*/\n  const [minutesPerParticipant, setMinutesPerParticipant] = useState(1);\n  const [timeBetweenSpeakers, setTimeBetweenSpeakers] = useState(10);\n  const [participantToAdd, setParticipantToAdd] = useState(\"\");\n\n  /*Logged in user (if any)*/\n  const { user } = useAuth0();\n\n  // const dummyMeeting = {\n  //   userId: null,\n  //   type: \"standup\",\n  //   meetingParticipants: [\n  //     { name: \"Daniela\", hasHadTurn: true, timeLeft: 43, pauses: [] },\n  //     { name: \"Stefan\", hasHadTurn: true, timeLeft: -60, pauses: [] },\n  //     { name: \"Tommy\", hasHadTurn: true, timeLeft: 50, pauses: [] },\n  //     { name: \"Kawalpreet\", hasHadTurn: true, timeLeft: 20, pauses: [] },\n  //     { name: \"Jon\", hasHadTurn: false, timeLeft: 10, pauses: [] },\n  //   ],\n  //   meetingStartTime: 1610191221089,\n  //   meetingEndTime: 1610191229759,\n  //   meetingFinished: false,\n  // };\n\n  const blankMeeting = {\n    userId: null,\n    type: \"standup\",\n    meetingParticipants: [],\n    meetingStartTime: null,\n    meetingEndTime: null,\n    meetingFinished: false,\n  };\n\n  const [meeting, setMeeting] = useState({ ...blankMeeting });\n\n  /*Steps*/\n  const [totalMeetingTime, setTotalMeetingTime] = useState(0);\n\n  function deleteParticipant(i) {\n    if (i === undefined) {\n      console.error(\"No index passed to deleteParticipant\");\n      return;\n    }\n    const newState = { ...meeting };\n    newState.meetingParticipants.splice(i, 1);\n    setMeeting(newState);\n  }\n  // Add User ID if logged in\n  useEffect(() => {\n    if (user) {\n      setMeeting({ ...meeting, userId: user.sub });\n    }\n  }, [user]);\n\n  // Calculate meeting time\n  useEffect(() => {\n    function calculateMeetingTime() {\n      const people = meeting.meetingParticipants.length;\n      const speakingTimeInSeconds = people * minutesPerParticipant * 60;\n      const timeBetweenSpeakersInSeconds = people * timeBetweenSpeakers;\n      const totalTimeInMinutes = Math.round(\n        (speakingTimeInSeconds + timeBetweenSpeakersInSeconds) / 60\n      );\n      setTotalMeetingTime(totalTimeInMinutes);\n    }\n    if (standUpStep === 2) {\n      calculateMeetingTime();\n    }\n  }, [\n    standUpStep,\n    meeting.meetingParticipants.length,\n    minutesPerParticipant,\n    timeBetweenSpeakers,\n  ]);\n\n  // Check if meeting is finished\n  useEffect(() => {\n    if (meeting.meetingFinished === true) {\n      setStandUpStep(4);\n    }\n  }, [setStandUpStep, meeting.meetingFinished]);\n\n  function addParticipant(event) {\n    event.preventDefault();\n    if (participantToAdd === \"\") {\n      return;\n    }\n    const newState = { ...meeting };\n    newState.meetingParticipants.push({\n      name: participantToAdd,\n      hasHadTurn: false,\n      timeLeft: null,\n      pauses: [],\n    });\n    setParticipantToAdd(\"\");\n    setMeeting(newState);\n  }\n\n  // FIXME: Not working\n  // function shuffleParticipants() {\n  //   // Generate array of indices\n  //   const indices = meeting.meetingParticipants.map((el, i) => i);\n\n  //   //Fisher Yates algorithm - Shuffle Array\n  //   for (let i = indices.length; i > 0; i--) {\n  //     const j = Math.floor(Math.random() * (i + 1));\n  //     const temp = indices[i];\n  //     indices[i] = indices[j];\n  //     indices[j] = temp;\n  //   }\n\n  //   // Shuffle participants via shuffled indices\n  //   const shuffledParticipants = indices.map(\n  //     (el) => meeting.meetingParticipants[el]\n  //   );\n\n  //   console.log(indices);\n  //   console.log(shuffledParticipants);\n\n  //   setMeeting({ ...meeting, meetingParticipants: shuffledParticipants });\n  // }\n\n  function startMeeting() {\n    // Give each participant their time\n    const myArr = meeting.meetingParticipants.map((el) => {\n      el.timeLeft = minutesPerParticipant * 60;\n      return el;\n    });\n    setMeeting({ ...meeting, meetingParticipants: [...myArr] });\n\n    const newState = { ...meeting };\n    newState.meetingStartTime = Date.now();\n    setMeeting(newState);\n    setStandUpStep(3);\n  }\n\n  const steps = [\n    \"Review instructions\",\n    \"Pick settings, add participants\",\n    \"Run your StandUp\",\n    \"Finish!\",\n  ];\n\n  return (\n    <div>\n      <Collapse in={standUpStep === 1} timeout={800}>\n        <ProductTitle title=\"StandUp\">\n          <p className=\"stepsTitleText\">\n            Our formula for fast and engaging remote standups.\n          </p>\n        </ProductTitle>\n      </Collapse>\n\n      <Stepper activeStep={standUpStep - 1} style={{ background: \"none\" }}>\n        {steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n          return (\n            <Step key={label} {...stepProps}>\n              <StepLabel {...labelProps}>{label}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n\n      {standUpStep === 1 ? (\n        <InstructionsPage nextButton={() => setStandUpStep(2)} />\n      ) : null}\n\n      {standUpStep === 2 ? (\n        <SetupPage\n          props={{\n            minutesPerParticipant,\n            setMinutesPerParticipant,\n            timeBetweenSpeakers,\n            setTimeBetweenSpeakers,\n            participantToAdd,\n            addParticipant,\n            deleteParticipant,\n            setParticipantToAdd,\n            meeting,\n            totalMeetingTime,\n            setStandUpStep,\n            startMeeting,\n            setMeeting,\n          }}\n        />\n      ) : null}\n\n      {standUpStep === 3 ? (\n        <div>\n          <RandomizerAndTimer\n            props={{\n              meeting,\n              setMeeting,\n              speakerTime: minutesPerParticipant * 60,\n              timeBetweenSpeakers,\n            }}\n          />\n        </div>\n      ) : null}\n\n      {standUpStep === 4 ? (\n        <MeetingFinished\n          props={{\n            minutesPerParticipant,\n            meeting,\n          }}\n        />\n      ) : null}\n    </div>\n  );\n}\n","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/UserPage/UserPage.js",[],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/horizontal-navs/HorizontalNav4.js",[],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/RetroPage/01_Instructions/01_InstructionsRetro.js",[],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/RetroPage/02_PickRole/02_PickRole.js",[],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/RetroPage/05_FinishedMeeting/05_FinishedMeeting.js",[],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/RetroPage/03_Setup/03_SetupFacilitator.js",["176","177"],"// React\nimport { useEffect, useState } from \"react\";\n\n// Material UI\nimport Button from \"@material-ui/core/Button\";\nimport React from \"react\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\n\n// Retro Types Icons\nimport Looks4Icon from \"@material-ui/icons/Looks4\";\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport TrafficIcon from \"@material-ui/icons/Traffic\";\nimport EmojiEmotionsIcon from \"@material-ui/icons/EmojiEmotions\";\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\n\n// Nano id\nimport { nanoid } from \"nanoid\";\n\n// Auth0\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nexport default function SetupFacilitator({ props }) {\n  const {\n    previousStep,\n    nextStep,\n    participant,\n    setParticipant,\n    meeting,\n    setMeeting,\n  } = props;\n\n  // TODO: Autofill field\n  const { user, isAuthenticated, isLoading } = useAuth0();\n\n  const [pickedRetro, setPickedRetro] = useState(0);\n\n  function changeRetro(e) {\n    const { name, columns, icon } = retroColumns[e.target.value];\n\n    setPickedRetro(e.target.value);\n\n    setMeeting({\n      ...meeting,\n      subtype: name,\n      columns: columns,\n      icon: icon,\n    });\n  }\n\n  const retroColumns = [\n    {\n      name: \"Four Ls (4Ls)\",\n      columns: [\"Liked\", \"Learned\", \"Lacked\", \"Longed For\"],\n      icon: <Looks4Icon />,\n    },\n    {\n      name: \"Starfish (Small)\",\n      columns: [\"Keep\", \"More Of\", \"Less Of / Stop\"],\n      icon: <StarRateIcon />,\n    },\n    {\n      name: \"Starfish (Large)\",\n      columns: [\n        \"Keep Doing\",\n        \"More Of\",\n        \"Start Doing\",\n        \"Stop Doing\",\n        \"Less Of\",\n      ],\n      icon: <StarIcon />,\n    },\n    {\n      name: \"Start, Stop, Continue\",\n      columns: [\"Start\", \"Stop\", \"Continue\"],\n      icon: <TrafficIcon />,\n    },\n    {\n      name: \"Mad, Sad, Glad\",\n      columns: [\"Mad\", \"Sad\", \"Glad\"],\n      icon: <EmojiEmotionsIcon />,\n    },\n    {\n      name: \"One Word Retro\",\n      columns: [\"Your Thoughts In One Word\"],\n      icon: <ChatBubbleIcon />,\n    },\n    {\n      name: \"KALM Retro\",\n      columns: [\"Keep\", \"Add\", \"More\", \"Less\"],\n      icon: <AssignmentIcon />,\n    },\n  ];\n\n  const styleObj = { width: 700 };\n\n  // Set Meeting Room ID\n  useEffect(() => {\n    if (meeting.roomId === null) {\n      setMeeting({ ...meeting, roomId: nanoid() });\n    }\n    console.info(`Meeting room id set to ${meeting.roomId}`);\n  });\n\n  // Add avatar URL, if any\n  useEffect(() => {\n    if (user && user.picture && !isLoading) {\n      setParticipant({ ...participant, avatar: user.picture });\n    }\n  }, [isLoading]);\n\n  return (\n    <div>\n      <h2>Facilitate a Retrospective</h2>\n      <p>Your name * (should autofill if logged in)</p>\n      <input\n        onChange={(e) =>\n          setParticipant({ ...participant, name: e.target.value })\n        }\n      ></input>\n      <p>Give your meeting a descriptive title *</p>\n      <input\n        onChange={(e) => setMeeting({ ...meeting, title: e.target.value })}\n      ></input>\n      <br />\n      <br />\n      <br />\n      <FormControl variant=\"outlined\" style={styleObj} required>\n        <InputLabel>Pick your retrospective</InputLabel>\n        <Select\n          value={pickedRetro}\n          onChange={(e) => changeRetro(e)}\n          label=\"Pick your retrospective\"\n        >\n          {retroColumns.map((el, i) => (\n            <MenuItem value={i}>\n              {el.icon}&nbsp;{el.name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <p>Your unique link - send this to your participants</p>\n      <FormControl variant=\"filled\" style={styleObj}>\n        <InputLabel htmlFor=\"generated-meeting-url\">\n          Meeting Room Link\n        </InputLabel>\n        <FilledInput\n          readOnly\n          id=\"generated-meeting-url\"\n          value={`http://localhost:3000/rituals/retro?roomId=${meeting.roomId}`}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"copy link\"\n                onClick={() => console.log(\"Copy link\")}\n                edge=\"end\"\n              >\n                <Button>\n                  Copy &nbsp; <FileCopyIcon />\n                </Button>\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n      <p>or</p>\n      <FormControl variant=\"filled\" style={styleObj}>\n        <InputLabel htmlFor=\"generated-meeting-id\">Room ID</InputLabel>\n        <FilledInput\n          readOnly\n          id=\"generated-meeting-id\"\n          value={meeting.roomId}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                disableRipple\n                disableFocusRipple\n                aria-label=\"copy link\"\n                onClick={() => console.log(\"Copy link\")}\n                edge=\"end\"\n              >\n                <Button>\n                  Copy &nbsp; <FileCopyIcon />\n                </Button>\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n      <br />\n      <br />\n      <br />\n      <br />\n      <button onClick={previousStep}>&larr; Back</button>\n      <button onClick={nextStep}>Start session &rarr;</button>\n    </div>\n  );\n}\n","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/RetroPage/04_MeetingInProgress/04_MeetingInProgress.js",["178"],"// React\nimport { useState, useEffect } from \"react\";\n\n// Material UI\nimport Grid from \"@material-ui/core/Grid\";\n\n// Custom componenets\nimport RetroColumn from \"./RetroColumn/RetroColumn\";\n\n// Socket.io Client\nimport { io } from \"socket.io-client\";\n\nexport default function MeetingInProgress({ props }) {\n  const {\n    meeting,\n    setMeeting,\n    addCard,\n    deleteCard,\n    updateCardText,\n    updateCardVotes,\n    moveCard,\n    participant,\n    setParticipant,\n    socket,\n    setSocket,\n  } = props;\n\n  // Start the meeting\n  useEffect(() => {\n    if (!meeting.meetingStarted) {\n      setMeeting({ ...meeting, meetingStarted: true });\n    }\n  });\n\n  // Establish socket.io connection and rules (send/receive)\n  const [rulesEstablished, setRulesEstablished] = useState(false);\n  useEffect(() => {\n    // Establish socket connection\n    if (!socket) {\n      // Destructure relevant info for connection\n      const { roomId } = meeting;\n      const { name, isFacilitator, avatar } = participant;\n\n      setSocket(\n        io(\"http://localhost:8080\", {\n          query: {\n            roomId,\n            name,\n            isFacilitator,\n            avatar,\n          },\n        })\n      );\n    }\n\n    //// 👉 2 types of sources - local, and socket\n    ////// 👉  With socket, we only render, but don't emit the card, to avoid an infinite loop\n    ////// 👉  With local, we render AND emit the card, to send it to other participants\n    if (socket) {\n      if (!rulesEstablished) {\n        const source = \"socket\";\n\n        // 📲 Notification rules\n        socket.on(\"notification\", (notification) => {\n          // FIXME: Do stuff......\n          console.log(notification);\n        });\n\n        //// 📥 \"Receive\" rules\n        // Update Meeting State\n        socket.on(\"updateMeeting\", (meeting) => {\n          setMeeting(meeting);\n        });\n        // // Add\n        // socket.on(\"addCard\", (card) => {\n        //   addCard({ source, card });\n        // });\n\n        // // Delete\n        // socket.on(\"deleteCard\", (id) => {\n        //   deleteCard({ source, id });\n        // });\n\n        // // Update Text\n        // socket.on(\"updateCardText\", ({ id, content }) => {\n        //   updateCardText({ source, id, content });\n        // });\n\n        // // Update Votes\n        // socket.on(\"updateCardVotes\", ({ id, thumb }) => {\n        //   updateCardVotes({ source, id, thumb });\n        // });\n\n        // // Move card\n        // socket.on(\"moveCard\", ({ id, direction }) => {\n        //   moveCard({ source, id, direction });\n        // });\n\n        setRulesEstablished(true);\n      }\n    }\n\n    // Emit initial meeting state\n    if (socket && !participant.meetingEmitted) {\n      alert(\"Imma emmit...\");\n      socket.emit(\"startMeeting\", meeting);\n      setParticipant({ ...participant, meetingEmitted: true });\n    }\n  }, [\n    addCard,\n    deleteCard,\n    meeting,\n    moveCard,\n    participant,\n    rulesEstablished,\n    setMeeting,\n    setParticipant,\n    setSocket,\n    socket,\n    updateCardText,\n    updateCardVotes,\n  ]);\n\n  return (\n    <div>\n      {/* TODO: Need some logic here, where the server determines the time of the meeting*/}\n      {/* <TimerPartyParrotHorizontal\n          props={{\n            totalTime: 600,\n            timeLeft: 600,\n          }}\n        /> */}\n      <div>\n        <Grid\n          className=\"retroBoardContainer\"\n          container\n          spacing={2}\n          wrap=\"nowrap\"\n        >\n          {meeting.columns.map((columnTitle, index) => (\n            <RetroColumn\n              key={`${columnTitle}_card${index}`}\n              props={{\n                meeting,\n                setMeeting,\n                columnTitle,\n                index,\n                addCard,\n                updateCardText,\n                updateCardVotes,\n                deleteCard,\n                moveCard,\n                cards: meeting.cards.filter((card) =>\n                  card.columnIndex === index && !card.isDeleted ? true : false\n                ),\n                participant,\n              }}\n            ></RetroColumn>\n          ))}\n        </Grid>\n      </div>\n    </div>\n  );\n}\n","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/RetroPage/03_Setup/03_SetupParticipant.js",[],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/ProductTitle/ProductTitle.js",[],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/team/Team2.js",[],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/UserDashboard/UserDashboard.js",["179","180","181","182"],"// React\nimport React, { useEffect, useState } from \"react\";\n\n//Auth0\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\n// CSS\nimport \"./UserDashboard.css\";\n\n// MaterialUI\nimport Box from \"@material-ui/core/Box\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\n//Components\nimport FastestMeeting from \"../FastestMeeting/FastestMeeting\";\nimport TotalRetros from \"../TotalRetros/TotalRetros\";\nimport TotalStandups from \"../TotalStandups/TotalStandups\"\n\nexport default function UserDashboard() {\n  const { user, isAuthenticated } = useAuth0();\n\n  return (\n    <div className=\"dashboard-container\">\n      <div className=\"user-information\">\n        <h1>{user ? user.name : <h3>pws log in</h3>}</h1>\n        <h3>Facilitator</h3>\n        <h3>@ {user ? user.email : <h3>No e-mail</h3>}</h3>\n        <FastestMeeting></FastestMeeting>\n        <TotalRetros></TotalRetros>\n        <TotalStandups></TotalStandups>\n      </div>\n      <div className=\"img-container\">\n        {user ? (\n          <Avatar alt={user.name} src={user.picture} className=\"avatar-home\" />\n        ) : null}\n      </div>\n    </div>\n  );\n}\n","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/gallery/Gallery2.js",[],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/features/Features4.js",[],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/MeetingStats/MeetingStats.js",["183","184","185"],"// React\nimport React, { useState, useEffect } from \"react\";\n\n// CSS\nimport \"./MeetingStats.css\";\n\n// Material UI\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Typography } from \"@material-ui/core\";\n\n//components\nimport SimpleAccordion from \"./Acordion\";\nimport FormPropsTextFields from \"../../components/TextField/Text\";\n\nexport default function MeetingStats(props) {\n  const { calculateTotalMeetingTime } = props;\n  // state for filtered date\n  const [dateFilter, setDateFilter] = useState(null);\n\n  // state for all previous meetings\n  const [meetingHistory, setMeetingHistory] = useState([]);\n\n  // get all meetings filtered by date\n\n  async function getMeetingByDate() {\n    let timestamp = new Date(dateFilter);\n    timestamp = timestamp.getTime();\n\n    const res = await fetch(\n      `http://localhost:8080/meeting/getByDate?meetingStartTime=${timestamp}`\n    );\n    const { data } = await res.json();\n    console.log(data);\n    setMeetingHistory(data);\n    // setIsDateFilter(true);\n  }\n\n  return (\n    <div className=\"input-container\">\n      <Paper\n        elevation={3}\n        style={{ maxWidth: \"700px\", padding: \"5px\", margin: \"10px auto\" }}\n      >\n        <p className=\"statsTitle\">Filter your meeting by Date</p>\n        <input\n          style={{\n            width: \"175px\",\n            align: \"center\",\n            display: \"inline-block\",\n          }}\n          className=\"form-control-homepage\"\n          type=\"date\"\n          onChange={(event) => setDateFilter(event.target.value)}\n          placeholder=\"filter\"\n          name=\"filter-date\"\n        ></input>\n        {\"  \"}\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          onClick={getMeetingByDate}\n        >\n          Get all Meetings\n        </Button>\n        <p>Showing all meetings from: {dateFilter} 📅</p>\n        {meetingHistory.map((obj, i) => {\n          return (\n            <div className=\"notes inner\">\n              <div key={i}>\n                <FormPropsTextFields\n                  index={i}\n                  label=\"Meeting Type\"\n                  defaultValue={obj.type}\n                />\n                <FormPropsTextFields\n                  index={i}\n                  label=\"Meeting Date\"\n                  defaultValue={dateFilter}\n                />\n                <FormPropsTextFields\n                  index={i}\n                  label=\"Meeting Time\"\n                  defaultValue={\n                    new Date(obj.meetingEndTime).getTime() -\n                    new Date(obj.meetingStartTime).getTime()\n                  }\n                />\n                <SimpleAccordion\n                  title=\"Details\"\n                  textParticipant={obj.meetingParticipants.map((ojs) => {\n                    return <div>Name: {ojs.name}</div>;\n                  })}\n                  textTimeLeft={obj.meetingParticipants.map((ojs) => {\n                    return <div>Time left: {ojs.timeLeft}</div>;\n                  })}\n                  //   textTimePaused={obj.meetingParticipants.map((ojs) => {\n                  //     return <div>Pauses: {ojs.pauses}</div>;\n                  //   })}\n                ></SimpleAccordion>\n              </div>\n            </div>\n          );\n        })}\n      </Paper>\n    </div>\n  );\n}\n","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/StatsGraph/StatsGraph.js",[],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/StandUpPage/04_MeetingFinished/04_MeetingFinished.js",["186","187"],"// React\nimport { useEffect } from \"react\";\n\n// CSS\nimport \"./04_MeetingFinished.css\";\n\n// npm module - Confetti\nimport Confetti from \"react-confetti\";\n\n// Material UI\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport { CardContent } from \"@material-ui/core\";\nimport { Typography } from \"@material-ui/core\";\nimport { Zoom } from \"@material-ui/core\";\nimport { Fade } from \"@material-ui/core\";\n\n// Material Icons\nimport LockIcon from \"@material-ui/icons/Lock\";\n\n// Auth0\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nimport LogInButton from \"../../../components/Login/LogInButton/LogInButton\";\n\nexport default function MeetingFinished({ props }) {\n  const { minutesPerParticipant, meeting } = props;\n  const { user, isAuthenticated } = useAuth0();\n  const congratulationsMessages = [\n    \"You smashed it! 💪\",\n    \"Agile rockstars! 🤘\",\n    \"Way to go! 🎉\",\n    \"Great job! 😍\",\n    \"Well done! 💃\",\n    \"Hip, hip, hurrah! 🙌\",\n    \"Nice one! 🥳\",\n    \"Oh yeah! 😎\",\n    \"Awesome! 😃\",\n    \"Great work, team! 😍\",\n    \"Nice job! 👍\",\n    \"Great work! 🎊\",\n  ];\n\n  const valuableStats = [\n    \"⌚ Fastest average day of the week\",\n    \"📆 Best time to schedule a StandUp\",\n    \"⏩ Longest ever StandUp meeting\",\n    \"🤏 Shortest ever StandUp meeting\",\n    \"👩‍👧 StandUp with the fewest participants\",\n    \"👨‍👨‍👧‍👧 StandUp with the most participants\",\n    \"🌍 Number of people running StandUps at the same time\",\n    \"⏯ Addicted to pausing the timer\",\n  ];\n\n  function pickRandom(array) {\n    const index = Math.floor(Math.random() * (array.length - 1));\n    return array[index];\n  }\n\n  useEffect(() => {\n    function postMeetingToDatabase() {\n      try {\n        fetch(\"http://localhost:8080/meeting\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(meeting),\n        })\n          .then((response) => response.json())\n          .then((data) => console.log(data));\n      } catch (err) {\n        console.log(\"hi\");\n      }\n    }\n\n    postMeetingToDatabase();\n  });\n\n  console.log({ minutesPerParticipant, meeting });\n\n  function calculateTotalMeetingTime() {\n    const { meetingStartTime, meetingEndTime } = meeting;\n    const ms = meetingEndTime - meetingStartTime;\n\n    let seconds = Math.floor(ms / 1000);\n    let minutes = 0;\n\n    while (seconds > 59) {\n      seconds = seconds - 60;\n      minutes = minutes + 1;\n    }\n\n    let str = `${minutes < 10 ? \"0\" + minutes : minutes}:${\n      seconds < 10 ? \"0\" + seconds : seconds\n    }`;\n\n    return str.match(/(\\d\\d:\\d\\d)/g) && str !== \"00:00\" ? str : \"Too quick!\";\n  }\n\n  function findFastest() {\n    let arr = meeting.meetingParticipants;\n\n    const fastest = arr.reduce((acc, cur) => {\n      return cur.timeLeft > acc.timeLeft ? cur : acc;\n    });\n\n    return fastest.name;\n  }\n\n  function findSlowest() {\n    let arr = meeting.meetingParticipants;\n\n    const slowest = arr.reduce((acc, cur) => {\n      return cur.timeLeft < acc.timeLeft ? cur : acc;\n    });\n\n    return slowest.name;\n  }\n\n  return isAuthenticated ? (\n    <div>\n      <Confetti numberOfPieces={150} recycle={true} />\n\n      <section className=\"finishedTitleArea\">\n        <h3 className=\"meetingFinishedTitle\">\n          {pickRandom(congratulationsMessages)}\n        </h3>\n        <h4 className=\"meetingFinishedSubtitle\">You finished your stand up</h4>\n      </section>\n      <br />\n      <Grid container spacing={3}>\n        <Grid item xs>\n          <Card className=\"statCard\">\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                ⌚ Total meeting time\n              </Typography>\n              <Typography variant=\"h5\" component=\"h2\">\n                {calculateTotalMeetingTime()}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs>\n          <Card className=\"statCard\">\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                ⚡ Life in the fast lane\n              </Typography>\n              <Typography variant=\"h5\" component=\"h2\">\n                {findFastest()}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs>\n          <Card className=\"statCard\">\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                ☕ Could use a coffee\n              </Typography>\n              <Typography variant=\"h5\" component=\"h2\">\n                {findSlowest()}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n      <br />\n      <p>\n        Please wait while we upload the details this meeting to your account...\n      </p>\n      <p>Success! The meeting details were saved to your account</p>\n      <p>\n        Hmm... There was a problem saving this meeting to your account. Try\n        again or contact our support team\n      </p>\n    </div>\n  ) : (\n    <div>\n      <Confetti numberOfPieces={150} recycle={true} />\n\n      <section className=\"finishedTitleArea\">\n        <h3 className=\"meetingFinishedTitle\">\n          {pickRandom(congratulationsMessages)}\n        </h3>\n        <h4 className=\"meetingFinishedSubtitle\">You finished your stand up</h4>\n      </section>\n      <br />\n      <Grid container spacing={3}>\n        <Grid item xs>\n          <Card className=\"statCard\">\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                ⌚ Total meeting time\n              </Typography>\n              <Typography variant=\"h5\" component=\"h2\">\n                {calculateTotalMeetingTime()}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs>\n          <Card className=\"statCard\">\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                ⚡ Life in the fast lane\n              </Typography>\n              <Typography variant=\"h5\" component=\"h2\">\n                {findFastest()}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs>\n          <Card className=\"statCard\">\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                ☕ Could use a coffee\n              </Typography>\n              <Typography variant=\"h5\" component=\"h2\">\n                {findSlowest()}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n      <div className=\"lockedStats\">\n        <Fade in={true} timeout={2500}>\n          <div className=\"marketingMessage\">\n            <LockIcon fontSize=\"large\" />\n            <p className=\"salesyTitle\">Unlock even more valuable stats</p>\n            <p className=\"salesySubtitle\">\n              {\" \"}\n              run better, faster, more productive meetings\n            </p>\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              href=\"https://powershellrangers.eu.auth0.com/u/login?state=g6Fo2SA4VVdkTjRmUUwwdG5lblFlSmdiLU02VTNUalZBTjNXb6N0aWTZIFhJSUE0UmU4SUlLYzcyeVpMNWwtNDhwd0FIcGZIOVh5o2NpZNkgS0NkQ3psdjR4eFQ3WmprSTN1eE1zVkVxakNadTdZVjY\"\n            >\n              Sign Up for free &rarr;\n            </Button>\n          </div>\n        </Fade>\n\n        <div className=\"blurryStats\">\n          <Grid container spacing={3}>\n            {valuableStats.map((el, i) => (\n              <Zoom in={true} timeout={1200 * (i + 1)}>\n                <Grid item xs={6} sm={3}>\n                  <Card className=\"statCard\">\n                    <CardContent>\n                      <Typography color=\"textSecondary\" gutterBottom>\n                        {el}\n                      </Typography>\n                      <Typography variant=\"h5\" component=\"h2\">\n                        ???\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              </Zoom>\n            ))}\n          </Grid>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/StandUpPage/01_Instructions/01_Instructions.js",[],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/footers/Footer3.js",[],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/StandUpPage/02_Setup/02_Setup.js",[],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/StandUpPage/03_RandomizerAndTimer/03_RandomizerAndTimer.js",[],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/Login/LogInButton/LogInButton.js",[],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/Login/LogOutButton/LogOutButton.js",[],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/RandomizerCard/RandomizerCard.js",[],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/TimerPartyParrot/TimerPartyParrot.js",[],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/MeetingParticipants/ParticipantCard/ParticipantCard.js",[],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/MeetingStats/Acordion.js",[],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/TextField/Text.js",[],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/TotalStandups/TotalStandups.js",[],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/TotalRetros/TotalRetros.js",[],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/components/FastestMeeting/FastestMeeting.js",[],"/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/RetroPage/04_MeetingInProgress/RetroColumn/RetroColumn.js",["188"],"// Material UI\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\n\n// CSS\nimport \"./RetroColumn.css\";\n\n// Custom Components\nimport RetroCard from \"../RetroCard/RetroCard\";\n\n// shortid\nimport { nanoid } from \"nanoid\";\n\nexport default function RetroColumn({ props = {} }) {\n  const {\n    meeting,\n    columnTitle = \"Column Title\",\n    index,\n    cards,\n    addCard,\n    updateCardText,\n    updateCardVotes,\n    deleteCard,\n    moveCard,\n    participant,\n  } = props;\n\n  return (\n    <Grid item key={\"column\" + index}>\n      <Collapse in>\n        <Paper className=\"columnWrapper\">\n          <h3 className=\"columnTitle\">{columnTitle}</h3>\n          {cards.length > 0 ? (\n            cards\n              .sort(\n                (card1, card2) =>\n                  card2.thumbsUp -\n                  card2.thumbsDown -\n                  (card1.thumbsUp - card1.thumbsDown)\n              )\n              .map((card, index) => (\n                <RetroCard\n                  key={`${columnTitle}_${card}_${index}`}\n                  props={{ card, index, meeting, participant }}\n                  functions={{\n                    updateCardText,\n                    updateCardVotes,\n                    deleteCard,\n                    moveCard,\n                  }}\n                />\n              ))\n          ) : (\n            <p className=\"columnHelperText\">This column has no cards</p>\n          )}\n          <Button\n            style={{ width: \"100%\" }}\n            onClick={() => addCard({ source: \"local\", card: { i: index } })}\n          >\n            Add Card +\n          </Button>\n        </Paper>\n      </Collapse>\n    </Grid>\n  );\n}\n","/Users/sona/School-of-code/final-project/front-end-final-project-powershell-rangers/src/pages/RetroPage/04_MeetingInProgress/RetroCard/RetroCard.js",[],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":17,"column":8,"nodeType":"195","messageId":"196","endLine":17,"endColumn":23},{"ruleId":"193","severity":1,"message":"197","line":5,"column":8,"nodeType":"195","messageId":"196","endLine":5,"endColumn":13},{"ruleId":"193","severity":1,"message":"198","line":9,"column":8,"nodeType":"195","messageId":"196","endLine":9,"endColumn":19},{"ruleId":"193","severity":1,"message":"199","line":11,"column":8,"nodeType":"195","messageId":"196","endLine":11,"endColumn":14},{"ruleId":"193","severity":1,"message":"200","line":25,"column":8,"nodeType":"195","messageId":"196","endLine":25,"endColumn":17},{"ruleId":"193","severity":1,"message":"201","line":26,"column":8,"nodeType":"195","messageId":"196","endLine":26,"endColumn":13},{"ruleId":"193","severity":1,"message":"202","line":27,"column":8,"nodeType":"195","messageId":"196","endLine":27,"endColumn":16},{"ruleId":"193","severity":1,"message":"203","line":28,"column":8,"nodeType":"195","messageId":"196","endLine":28,"endColumn":15},{"ruleId":"193","severity":1,"message":"204","line":29,"column":8,"nodeType":"195","messageId":"196","endLine":29,"endColumn":21},{"ruleId":"205","severity":1,"message":"206","line":78,"column":6,"nodeType":"207","endLine":78,"endColumn":12,"suggestions":"208"},{"ruleId":"193","severity":1,"message":"209","line":42,"column":17,"nodeType":"195","messageId":"196","endLine":42,"endColumn":32},{"ruleId":"205","severity":1,"message":"210","line":118,"column":6,"nodeType":"207","endLine":118,"endColumn":17,"suggestions":"211"},{"ruleId":"193","severity":1,"message":"212","line":61,"column":15,"nodeType":"195","messageId":"196","endLine":61,"endColumn":21},{"ruleId":"193","severity":1,"message":"213","line":2,"column":17,"nodeType":"195","messageId":"196","endLine":2,"endColumn":26},{"ruleId":"193","severity":1,"message":"214","line":2,"column":28,"nodeType":"195","messageId":"196","endLine":2,"endColumn":36},{"ruleId":"193","severity":1,"message":"215","line":11,"column":8,"nodeType":"195","messageId":"196","endLine":11,"endColumn":11},{"ruleId":"193","severity":1,"message":"209","line":20,"column":17,"nodeType":"195","messageId":"196","endLine":20,"endColumn":32},{"ruleId":"193","severity":1,"message":"213","line":2,"column":27,"nodeType":"195","messageId":"196","endLine":2,"endColumn":36},{"ruleId":"193","severity":1,"message":"216","line":10,"column":10,"nodeType":"195","messageId":"196","endLine":10,"endColumn":20},{"ruleId":"193","severity":1,"message":"217","line":17,"column":11,"nodeType":"195","messageId":"196","endLine":17,"endColumn":36},{"ruleId":"193","severity":1,"message":"218","line":25,"column":8,"nodeType":"195","messageId":"196","endLine":25,"endColumn":19},{"ruleId":"193","severity":1,"message":"219","line":29,"column":11,"nodeType":"195","messageId":"196","endLine":29,"endColumn":15},{"ruleId":"193","severity":1,"message":"220","line":14,"column":10,"nodeType":"195","messageId":"196","endLine":14,"endColumn":16},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"no-unused-vars","'FinishedMeeting' is defined but never used.","Identifier","unusedVar","'Paper' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'Features4' is defined but never used.","'Team2' is defined but never used.","'Gallery2' is defined but never used.","'Footer3' is defined but never used.","'UserDashboard' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'meeting'. Either include it or remove the dependency array. You can also do a functional update 'setMeeting(m => ...)' if you only need 'meeting' in the 'setMeeting' call.","ArrayExpression",["223"],"'isAuthenticated' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'participant', 'setParticipant', and 'user'. Either include them or remove the dependency array.",["224"],"'source' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Box' is defined but never used.","'Typography' is defined but never used.","'calculateTotalMeetingTime' is assigned a value but never used.","'LogInButton' is defined but never used.","'user' is assigned a value but never used.","'nanoid' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},"Update the dependencies array to be: [meeting, user]",{"range":"229","text":"230"},"Update the dependencies array to be: [isLoading, participant, setParticipant, user]",{"range":"231","text":"232"},[2417,2423],"[meeting, user]",[3052,3063],"[isLoading, participant, setParticipant, user]"]